[[_git_tagging]]
=== Отбелязване 

(((tags)))
Както повечето СУВ, Гит може да отбелязва ('tag') отделни етапи в историята като важни. Обикновено тази
способност се използва за отбелязване на издания (v1.0, v1.1 и т.н.). В този раздел ще научите как да показвате
списък с наличните отбелязвания ('етикети'), как да създавате нови и какви са различните типове етикети.

==== Извеждане на списък с етикети

Да видите списъка с наличните етикети е лесно. Просто напишете `git tag`:(((git commands, tag)))

[source,console]
----
$ git tag
v0.1
v1.3
----

Тази команда извежда списък с етикетите в азбучен ред. Редът, в който се показват, няма особено значение.

Можете също да търсите етикети по определен образец. Хранилището на Гит има над 500 етикета. Ако искате да
видите само поредицата от 1.8.5, изпълнете следното:

[source,console]
----
$ git tag -l "v1.8.5*"
v1.8.5
v1.8.5-rc0
v1.8.5-rc1
v1.8.5-rc2
v1.8.5-rc3
v1.8.5.1
v1.8.5.2
v1.8.5.3
v1.8.5.4
v1.8.5.5
----

==== Създаване на етикети

Гит използва два главни типа етикети: 'леки' (lightweight) и 'с бележки' (annotated).

Лекият етикет е като клон, който не се променя – представлява просто указател към определено подаване.

Етикетите с бележки пък се съхраняват като пълни обекти в базата данни на Гит. Те имат чек-суми. Съдържат
името на човека, създал етикета, адресът му за електронна поща и дата. Също така съдържат съобщение и могат да
бъдат подписани с GNU Privacy Guard (GPG). Като цяло се препоръчва да се създават етикети с бележки, за да
имате цялата ведомост. Ако все пак искате да създадете само временен етикет или по някаква причина не ви
трябва нищо повече, леките етикети вършат работа.

[[_annotated_tags]]
==== Етикети с бележки (анотирани)

(((tags, annotated)))
Създаването на етикет с бележки е лесно. Най-лесно е да добавите опцията `-a`, когато изпълнявате командата
`tag`:(((git commands, tag)))

[source,console]
----
$ git tag -a v1.4 -m "my version 1.4"
$ git tag
v0.1
v1.3
v1.4
----

`-m` задава съобщение (message), което се съхранява с етикета. Ако не зададете съобщение, Гит пуска редактор,
за да ви даде възможност да го въведете.

Можете да видите данните за етикета, като използвате командата`git show`:

[source,console]
----
$ git show v1.4
tag v1.4
Tagger: Ben Straub <ben@straub.cc>
Date:   Sat May 3 20:19:12 2014 -0700

my version 1.4

commit ca82a6dff817ec66f44342007202690a93763949
Author: Scott Chacon <schacon@gee-mail.com>
Date:   Mon Mar 17 21:52:11 2008 -0700

    changed the version number
----

Виждат се ведомостта за етикетиращия, датата, когато подаването е етикетирано и съобщението на бележката,
преди направените промени.

==== Леки етикети 

(((tags, lightweight)))
Друг начин да се отбележат подавания е чрез лек етикет. Състои се само от чек-сумата на подаването, записана
във файл. Нищо повече не се пази. За да създадете лек етикет, не предоставяйте опциите `-a`, `-s` или `-m`.

[source,console]
----
$ git tag v1.4-lw
$ git tag
v0.1
v1.3
v1.4
v1.4-lw
v1.5
----

Сега, ако изпълните `git show` с името на етикета, не се показва нищо повече.(((git commands, show)))
Виждаме само подаването:

[source,console]
----
$ git show v1.4-lw
commit ca82a6dff817ec66f44342007202690a93763949
Author: Scott Chacon <schacon@gee-mail.com>
Date:   Mon Mar 17 21:52:11 2008 -0700

    changed the version number
----

==== Отбелязване по-късно

Можете да отбележите подавания, след като сте направили други. Да речем, че историята ви изглежда така:

[source,console]
----
$ git log --pretty=oneline
15027957951b64cf874c3557a0f3547bd83b3ff6 Merge branch 'experiment'
a6b4c97498bd301d84096da251c98a07c7723e65 beginning write support
0d52aaab4479697da7686c15f77a3d64d9165190 one more thing
6d52a271eda8725415634dd79daabbc4d9b6008e Merge branch 'experiment'
0b7434d86859cc7b8c3d5e1dddfed66ff742fcbc added a commit function
4682c3261057305bdd616e23b64b0857d832627b added a todo file
166ae0c4d3f420721acbb115cc33848dfcc2121a started write support
9fceb02d0ae598e95dc970b74767f19372d61af8 updated rakefile
964f16d36dfccde844893cac5b347e7b3d44abbc commit the todo
8a5cbc430f1a9c3d00faaeffd07798508422908a updated readme
----

Да предположим, че сте забравили да отбележите версията v1.2, която е подаването ``updated rakefile''.
Можете да направите това по-късно. За да отбележите подаването, указвате чек-сумата (или част от нея) в края
на командата.

[source,console]
----
$ git tag -a v1.2 9fceb02
----

Виждате, че сте отбелязали подаването:(((git commands, tag)))

[source,console]
----
$ git tag
v0.1
v1.2
v1.3
v1.4
v1.4-lw
v1.5

$ git show v1.2
tag v1.2
Tagger: Scott Chacon <schacon@gee-mail.com>
Date:   Mon Feb 9 15:32:16 2009 -0800

version 1.2
commit 9fceb02d0ae598e95dc970b74767f19372d61af8
Author: Magnus Chacon <mchacon@gee-mail.com>
Date:   Sun Apr 27 20:43:35 2008 -0700

    updated rakefile
...
----

[[_sharing_tags]]
==== Споделяне на етикети

По подразбиране `git push` не качва етикетите на отдалечения сървър.(((git commands, push))) Трябва изрично да
изтласкате етикетите към споделения сървър, след като ги създадете. Това действие е същото като споделянето на
отдалечени клони. Изпълнете `git push origin [tagname]`.

[source,console]
----
$ git push origin v1.5
Counting objects: 14, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (12/12), done.
Writing objects: 100% (14/14), 2.05 KiB | 0 bytes/s, done.
Total 14 (delta 3), reused 0 (delta 0)
To git@github.com:schacon/simplegit.git
 * [new tag]         v1.5 -> v1.5
----

Ако имате много етикети, които искате да изтласкате наведнъж, можете да използвате опцията `--tags` към
командата `git push`. Това ще занесе всички етикети (които не са вече там) на отдалечения сървър.

[source,console]
----
$ git push origin --tags
Counting objects: 1, done.
Writing objects: 100% (1/1), 160 bytes | 0 bytes/s, done.
Total 1 (delta 0), reused 0 (delta 0)
To git@github.com:schacon/simplegit.git
 * [new tag]         v1.4 -> v1.4
 * [new tag]         v1.4-lw -> v1.4-lw
----

Сега, когато някой изтегли от вашето хранилище, ще получи и етикетите.

==== Отписване на етикети

Всъщност, да се отпише (check out) етикет в Гит, е невъзможно, тъй като етикетите не могат да бъдат променяни. Ако
искате да вземете някоя версия, която изглежда като определен етикет, в работната си папка, можете да
създадете нов клон от дадения етикет чрез `git checkout -b [branchname] [tagname]`:

[source,console]
----
$ git checkout -b version2 v2.0.0
Switched to a new branch 'version2'
----

Разбира се, ако подадете промени, клонът `version2` ще се различава от `v2.0.0`, така че бъдете внимателни.


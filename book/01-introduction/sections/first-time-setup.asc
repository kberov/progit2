[[_first_time]]
=== Първоначални настройки

Сега като имате Гит на компютъра си, ще искате да настроите работната си среда.  Това се прави само веднъж.
Настройките си остават непроменени при обновяване на Гит. Също така можете да променяте тези настройки по
всяко време като изпълните командите отново.

Гит идва с инструмент, наречен `git config`, който ви позволява да преглеждате и задавате стойности на
конфигурационните променливи. Тези променливи контролират поведението и изхода от изпълнението на
командите.(((git commands, config)))
Те могат да се съхраняват на три различни места:

1. Файлът `/etc/gitconfig`: Съдържа настройки за всички потребители на машината и всички техни хранилища.
  Ако подадете аргумента `--system` на `git config`, се чете или пише в този файл.
2. Файловете `~/.gitconfig` или `~/.config/git/config`: Само за вашия потребител.
  Можете да накарате Гит да ползва този файл като подадете `--global`.
3. Файлът `config`  в Гит директорията (т.е. `.git/config`) на хранилището, което използвате в момента: Важи
  само за това хранилище.

Всяко ниво е с приоритет пред по-общото, горно ниво. Стойностите в `.git/config` са с предимство пред тези от
`/etc/gitconfig`.

На компютри с Windows Гит търси файла `.gitconfig` в папката `$HOME` (обикновено `C:\Users\$USER`). Гледа се
и в `/etc/gitconfig`, макар пътят да е относителен (в кореновата папка на MSys). Това е мястото, където сте
инсталирали Гит. Ако ползвате Гит версия 2.x или следваща на Windows, се чете също системния конфигурационен
файл `C:\Documents and Settings\All Users\Application Data\Git\config` (на Windows XP). На  Windows Vista и
следващи се ползва `C:\ProgramData\Git\config`.  Този файл може да бъде променян само чрез командата `git
config -f <file>`, изпълнена като потребител `admin`.

==== Вашата самоличност

Първото нещо, което трябва да направите след като инсталирате Гит, е да зададете потребителското си име и
адрес за електронна поща. Това е важно, защото Гит използва тази информация при всяко подаване (commit) на
промени. Тази информация се записва във всяко следващо подаване, без възможност за промяна по-късно.

[source,console]
----
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
----

Да повторим – това се прави само веднъж ако подадете аргумента `--global`. Така Гит ще използва тази
информация за всичките ви проекти на вашия системен потребител. Ако искате да промените тези данни за
специфичен проект, можете да изпълните командата отново без аргумента `--global`, докато сте в папката
на дадения проект. 

Много от инструментите с графичен интерфейс ще ви помогнат да свършите това, когато ги пуснете за първи път.

==== Вашият Текстов Редактор

След като сте задали настройки за самоличност, можете да конфигурирате текстовия редактор по подразбиране,
който ще бъде ползван, когато трябва да въведете съобщение. Ако не е зададен, Гит ползва системния текстов
редактор по подразбиране. 

Ако искате да ползвате друг, да речем Emacs, можете да направите следното:

[source,console]
----
$ git config --global core.editor emacs
----

На Windows, за да ползвате друг редактор, например Notepad++, направете следното:

На 32-битова система
[source,console]
----
$ git config --global core.editor "'C:/Program Files/Notepad++/notepad++.exe' -multiInst -nosession"
----
На 64-битова система
[source,console]
----
$ git config --global core.editor "'C:/Program Files (x86)/Notepad++/notepad++.exe' -multiInst -nosession"
----

[NOTE]
====
Vim и Emacs са известни текстови редактори, които често се използват на Unix-подобни системи като
Linux и OS X. Notepad++ се ползва често в Windows.
Ако не сте на ти с никой от тях, трябва да потърсите съвети за настройване на вашия редактор за ползване с Гит
====

[WARNING]
====
Ако не свършите тази работа сега, после може много да се чудите какво става.
В Windows например може Гит внезапно да спре насред някакво действие, опитвайки се да зареди текстовия
редактор. 
====

==== Проверка на настройките

За да проверите какви са настройките ви, можете да ползвате командата `git config --list`. Тя показва списък
със всички настройки на Гит, които се ползват в момента:

[source,console]
----
$ git config --list
user.name=John Doe
user.email=johndoe@example.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
----

Някои от ключовете може да видите многократно, защото Гит чете ключовете от различни файлове (например `/etc/gitconfig`
и `~/.gitconfig`).
В такива случаи знайте, че Гит ползва последната стойност, която виждате на някой повтарящ се ключ.

Също така може да проверите каква е текущата стойност на отделен ключ, като напишете `git config <key>`:(((git commands, config)))

[source,console]
----
$ git config user.name
John Doe
----

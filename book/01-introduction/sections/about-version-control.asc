=== За управлението на версии

(((version control)))
Какво е "управление на версии" и защо би трябвало да ви интересува? Управление на версиите (version control)
е система, която записва промените в един файл или набор от файлове с течение на времето, така че можете да се
върнете към определена версия по-късно. За примерите в тази книга ще използвате файлове с програмен изходен
код, въпреки че в действителност можете да запазвате версии на почти всякакви файлове.

Ако сте графичен или уеб-дизайнер и искате да пазите всяка версия на някоя картинка или изложение (което
най-вероятно желаете), да ползвате Система за Управление на Версиите (СУВ) (Version Control System – VCS) е
мъдро решение. Тя ви позволява да връщате файлове или цял проект до предишното им състояние, да сравнявате
промените с течение на времето, да видите кой последно е променял нещо, което създава проблеми, кой е направил
грешка и много други неща. Използването на СУВ също означава, че ако оплескате работата или загубите файлове,
можете лесно да възстановите загубите. И всичко това без много усилия.

==== Самостоятелни системи за управление на версиите

(((version control,local)))
За много хора предпочитаният начин за управление на версиите на техните файлове е да ги копират в друга папка
(с бележка за датата, ако са умни). Този подход е много разпространен, тъй като е толкова прост, но
същевременно е невероятно податлив на грешки. Лесно се забравя в коя папка се намирате в момента, лесно е да
запишете грешния файл или да копирате върху файлове без да си искате.

Поради този проблем програмистите отдавна вече са разработили самостоятелни СУВ, които разполагат с проста база от
данни, която съхранява направените промени във файловете.

.Самостоятелно управление на версиите.
image::images/local.png[Диаграма на самостоятелно управление на версиите]

Една от най-известните СУВ бе RCS (Revision Control System). Тя е разпространена на много компютри и днес.
Дори всеизвестната операционна система Mac OS X включва rcs, когато инсталирате "Инструментите за
Разработчици". RCS съхранява набори от кръпки (разликите между файловете) в специален формат на диска.
Дадена версия може да се пресъздаде, като се приложат всички нужни кръпки.

==== Централизирани системи за управление на версиите

(((version control,centralized)))
Следващият голям проблем, с който хората се сблъскват, е необходимостта да си сътрудничат с други разработчици. За
справяне с това затруднение бяха разработени Централизирани Системи за Управление на Версиите (Centralized
Version Control Systems – CVCS). Такива системи (като CVS, Subversion и Perforce) представляват съвкупност от
централен сървър, където се съхраняват всички файлове с техните версии, и определен брой клиенти, които
отписват файлове от централния сървър, за да работят с тях. (((CVS)))(((Subversion)))(((Perforce)))
В продължение на много години това беше стандартът за управление на версии.

.Централизирано управление на версиите.
image::images/centralized.png[Диаграма на Централизирано управление на версиите]

Този строеж предлага много предимства, особено в сравнение със самостоятелните СУВ. Всеки знае общо взето
какво правят другите по проекта. Администраторите имат контрол върху настройките (кой какво може да
прави) и е много по-лесно да се управлява централизирана СУВ, отколкото да се работи със самостоятелни бази
данни на всеки клиент (отделен компютър).

Все пак и тук има сериозни недостатъци. Най-очевидният е зависимостта на всички от централния сървър. Ако той
се счупи за около час, никой не може да си сътрудничи с никой друг или да записва нови версии на нищо от това,
върху което работи. Ако твърдият диск на централния сървър излезе от строя, и няма архивни копия, губите
абсолютно всичко – цялата история на проекта освен това, което разработчиците имат на компютрите си.
Самостоятелните СУВ страдат от същия проблем – имате ли цялата история на проекта само на едно място,
рискувате да загубите всичко.

==== Разпределени системи за управление на версиите

(((version control,distributed)))
И тук идва ред на Разпределените Системи за Управление на Версиите (Distributed Version Control Systems – DVCSs). При РСУВ (каквито са Git, Mercurial, Bazaar или Darcs), клиентите не просто отписват последното
изображение на файловете – те създават напълно огледален образ на хранилището. Така, ако някой сървър умре, и
различни системи са обменяли работа чрез него, всеки от клиентите може да бъде копиран обратно на централния
сървър и работата да бъде възстановена. Всяко копие е пълен архив на всички данни.

.Разпределено управление на версиите.
image::images/distributed.png[Диаграма за Разпределено управление на версиите]

Нещо повече, много от тези системи се справят чудесно с това да имат няколко отдалечени хранилища, с които
работят, така че да можете да си сътрудничите с различни групи хора по различни начини едновременно в един
проект. Това ви дава възможност да настроите няколко начина на взаимодействие с другите (йерархични модели
например), което е невъзможно при централизираните СУВ.

